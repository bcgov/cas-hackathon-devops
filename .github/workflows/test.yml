name: Test App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
 run:
  working-directory: ./test-react-app

jobs:
  install-dev-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn install --frozen-lockfile
        working-directory: ./test-react-app

  yarn-audit:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn audit-deps
        working-directory: ./test-react-app

  pre-commit:
    needs: install-dev-tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: set pre-commit cache directory
        run: |
          echo "PRE_COMMIT_HOME=$GITHUB_WORKSPACE/.pre-commit-cache" >> $GITHUB_ENV
      - name: set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - name: create commitlint COMMIT_EDITMSG if not exists
        run: |
          if test -f ".git/COMMIT_EDITMSG"; then
              echo "COMMIT_EDITMSG EXISTS, skipping"
          else
              touch .git/COMMIT_EDITMSG
          fi
      - uses: actions/cache@v3
        with:
          path: |
            ./.pre-commit-cache
          key: pre-commit-${{ env.PY }}-${{ hashFiles('.pre-commit-config.yaml') }}-v3
      - run: pre-commit run --all-files

  sonarcloud-scan:
    uses: button-inc/gh-actions/.github/workflows/scan-code-sonarcloud.yml@develop
    secrets:
      github-token: ${{ secrets.GH_TOKEN }}
      sonar-token: ${{ secrets.SONAR_TOKEN}}

  trivy-scan:
    uses: button-inc/gh-actions/.github/workflows/scan-code-trivy.yml@develop

  zap-scan:
    uses: button-inc/gh-actions/.github/workflows/scan-code-owasp-zap.yml@develop
    with:
      target-url: 'http://localhost:3000'
      package-manager: 'yarn'

  # docker-build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - image: ghcr.io/bcgov/cas-hackathon-devops
  #           context: .
  #           dockerfile: test-react-app/Dockerfile
  #           name: app
  #   name: Build ${{ matrix.name }} docker image
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         install: true
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ${{ matrix.image }}
  #         tags: |
  #           type=sha,format=long,prefix=
  #           latest
  #           type=ref,event=pr
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Cache Docker layers
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-${{ matrix.name }}
  #     - name: Build image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ${{ matrix.context }}
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         file: ${{ matrix.dockerfile }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new
  #       # Temp fix
  #       # https://github.com/docker/build-push-action/issues/252
  #       # https://github.com/moby/buildkit/issues/1896
  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache
